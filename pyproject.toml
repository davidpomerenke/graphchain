# https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# https://python-poetry.org/docs/pyproject/
[tool.poetry]
name = "graphchain"
version = "1.4.0"
description = "An efficient cache for the execution of dask graphs."
authors = ["Laurent Sorber <laurent@radix.ai>"]
readme = "README.md"
repository = "https://github.com/radix-ai/graphchain"

# https://commitizen-tools.github.io/commitizen/config/
[tool.commitizen]
bump_message = "bump(release): v$current_version â†’ v$new_version"
tag_format = "v$version"
update_changelog_on_bump = true
version = "1.4.0"
version_files = ["pyproject.toml:version"]

# https://python-poetry.org/docs/dependency-specification/
[tool.poetry.dependencies]
cloudpickle = "^3.0.0"
dask = "^2023.11.0"
fs-s3fs = "^1.1.1"
joblib = "^1.3.2"
lz4 = "^4.3.2"
python = ">=3.9,<3.13"

# https://python-poetry.org/docs/master/managing-dependencies/
# TODO: Split in `tool.poetry.group.dev` and `tool.poetry.group.test` when Poetry 1.2.0 is released.
[tool.poetry.dev-dependencies]
absolufy-imports = "^0.3.1"
bandit = { extras = ["toml"], version = "^1.7.5" }
black = "^23.11.0"
commitizen = "^3.12.0"
coverage = { extras = ["toml"], version = "^7.3.2" }
cruft = "^2.15.0"
darglint = "^1.8.1"
fastparquet = "^2023.10.1"
flake8 = "^6.1.0"
flake8-bugbear = "^23.9.16"
flake8-comprehensions = "^3.14.0"
flake8-mutable = "^1.2.0"
flake8-print = "^5.0.0"
flake8-pytest-style = "^1.7.2"
flake8-rst-docstrings = "^0.3.0"
flake8-tidy-imports = "^4.10.0"
isort = "^5.12.0"
mypy = "^1.7.0"
pandas = "^2.1.3"
pandas-stubs = "^2.1.1.230928"
pdoc = "^14.1.0"
pep8-naming = "^0.13.3"
poethepoet = "^0.24.3"
pre-commit = "^3.5.0"
pydocstyle = { extras = ["toml"], version = "^6.3.0" }
pytest = "^7.4.3"
pytest-clarity = "^1.0.1"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.4.0"
pyupgrade = "^3.15.0"
safety = "^2.3.5"
shellcheck-py = "^0.9.0.6"
yesqa = "^1.5.0"

# https://bandit.readthedocs.io/en/latest/config.html
[tool.bandit]
skips = ["B101", "B110", "B403"]

# https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
[tool.black]
line-length = 100

# https://coverage.readthedocs.io/en/latest/config.html#report
[tool.coverage.report]
fail_under = 50
precision = 1
show_missing = true
skip_covered = true

# https://coverage.readthedocs.io/en/latest/config.html#run
[tool.coverage.run]
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

# https://coverage.readthedocs.io/en/latest/config.html#xml
[tool.coverage.xml]
output = "reports/coverage.xml"

# https://pycqa.github.io/isort/docs/configuration/options.html
[tool.isort]
color_output = true
line_length = 100
profile = "black"
src_paths = ["src", "tests"]

# https://mypy.readthedocs.io/en/latest/config_file.html
[tool.mypy]
junit_xml = "reports/mypy.xml"
strict = true
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
ignore_missing_imports = true
no_implicit_reexport = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

# http://www.pydocstyle.org/en/latest/usage.html#configuration-files
[tool.pydocstyle]
convention = "numpy"

# https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
[tool.pytest.ini_options]
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --strict-config --strict-markers --verbosity=2 --junitxml=reports/pytest.xml"
filterwarnings = ["error", "ignore::DeprecationWarning"]
testpaths = ["src", "tests"]
xfail_strict = true

# https://github.com/nat-n/poethepoet
[tool.poe.tasks]

[tool.poe.tasks.docs]
help = "Generate this package's docs"
cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      graphchain
    """

[[tool.poe.tasks.docs.args]]
help = "The docstring style (default: numpy)"
name = "docformat"
options = ["--docformat"]
default = "numpy"

[[tool.poe.tasks.docs.args]]
help = "The output directory (default: docs)"
name = "outputdirectory"
options = ["--output-directory"]
default = "docs"

[tool.poe.tasks.lint]
help = "Lint this package"

[[tool.poe.tasks.lint.sequence]]
cmd = """
      pre-commit run
        --all-files
        --color always
      """

[[tool.poe.tasks.lint.sequence]]
shell = "safety check --continue-on-error --full-report"

[tool.poe.tasks.test]
help = "Test this package"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage run"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage report"

[[tool.poe.tasks.test.sequence]]
cmd = "coverage xml"
